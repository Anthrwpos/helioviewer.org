===================================================================
= HelioViewer Installation Notes                                  =
= By Keith Hughitt, October 2008   s                               =
===================================================================

I. Overview

	Requirements:
		-MySQL5
		-PHP5
		-Python (>=2.5)
		-Python-MysqlDB
		-ExifTool
		-Prototip 2
		
	Optional:
		-launchpadlib (Automated bug/feature-request submission)
		-php5-imagick (Movie generation)
		-php5-ffmpeg  (Movie generation)
		-php-video-tookkit (>= 0.1.5)(Movie generation)
		-svgfig (Icon generation)
		-Kakadu tools (MJ2 generation)
		
	Pre-Installion notes:
	
	Helioviewer is a AJAX-based web application which relies on PHP and MySQL as a back-end, and
	Python for file-processing and installation, as well as for some additional optional functionality
	relating to Feature/Event icon generation. A web-server must also be installed with the appropriate
	PHP & Mysql modules. Apache2 is recommended.

	In addition to the above-mentioned requirements, there is one proprietary javascrip library which
	is currently used by Helioviewer: Prototip. Prototip is a commercial javascript library with fairly
	inexpensive lisences for non-commercial use (about $5 USD). It is also available for download to
	try for free, but is not allowed to be redistributed, and thus was not included with Helioviewer.
	See reference [8] for a link to the Prototip website.
	
	Finally, there are many optional components that enable some of the extra features such as movie
	generation and automated generation of custom feature/event icons. On Ubuntu Linux you can download
	most of the software needed with the command:
	
		sudo apt-get install python-mysqldb php5-imagick php5-ffmpeg
		
	PHPVideoToolkit and svgfig are included with the Helioviewer source-code.
		
	
	
	I. Setting up MySQL
		A. Timezones
			In order to instruct MySQL to store datetime objects
			you must first enable support for timezones [1]: 
			
				mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -uroot -p mysql
			
			Once you have timezone support enabled, you can specify
			that MySQL should use UTC in the mysqld-safe configuration
			settings:
			
				sudo vi /etc/mysql/my.cnf

			Add the line "timezone	= UTC" under the [mysqld_safe] section.
			
				[mysqld_safe]
				socket		= /var/run/mysqld/mysqld.sock
				nice		= 0
				timezone	= UTC
				
			You can then restart MySQL to have the new settings take effect:
			
				sudo /etc/init.d/mysql restart
		B. Tables
			To set-up the tables for HelioViewer, create a new database
			schema and users with full access to that database. Edit the
			file createTables.sql using that information, and then at the
			command line run:
			
				mysql -uuser -p < createTables.sql
			
			where "user" is the username specified in createTables.sql.
			
	II. Populating the database
		A. install.py
			If you have a properly structured dataset[2], you can use
			install.py to populate the database. Simply run the installation
			script and follow the instructions.

				./install.py	
				
			You will be prompted for the database name, username and password
			as setup above.
			
	III. Building with Apache Ant
		A. Install Apache Ant
			Download and install Apache Ant[3]. On Ubuntu Linux, this can be
			done simply using aptitude:
				sudo aptitude install ant
		
		B. Set the ANT_HOME Environmental variable
			Make sure the environmental variable ANT_HOME is set. On Linux, you
			can edit the file /etc/environment, and add the line:
				ANT_HOME="/usr/share/ant"
				
		C. Run Ant
			To then use Ant to build an optimized (concatenated and minified)[4]
			version of HelioViewer's JavaScript classes and CSS, run ant
			in the directory where build.xml is located (by default that
			should be the same location as this README).
				ant
			The will produce three optmized files optimized files:
				helioviewer-all.js
				helioviewer-all-min.js
				main-min.csshttp://www.nickstakenburg.com/projects/prototip2/
				
			Note: Build.xml makes use of two external scripts, JSMin and jsmin.py
			located in the /install/tools directory. jsmin.py is a python port
			of Douglas Crockford's excellent utility, JSMin[4]. The script "JSMin"
			(no extension) is simply a bash script which passes along arguments to
			jsmin.py in order to avoid some limitation of Apache Ant's <exec> command
			when dealing with command line argument that contain special characters[6].
	
	IV. Seting up FFMPEG/phpvideotoolkit
			
			PHPVideoToolkit uses the FFmpeg php module. Additionally, there are several configuration parameters
			that may be different for your system and should be set in the "api/lib/phpvideotoolkit/config.php" file.	
			See [9] and [10] for additional help and examples of how to use the class.		
			
	V.  Using svgfig to generate icons
	
			You can generate a large array of shapes and colors of icons to use for feature/event markers simply
			using the included script "svgicons.py" in install/tools. Before using the script be sure to install
			svgfig[11], included in /install/tools.
			
			To modify colors or labels to use, edit the lists on lines 16 & 17 of the file. Running the program will 
			generate a directory of SVG icons and a directory of PNG icons. PNG icons are currently used by Helioviewer,
			although as support grows, SVG may be used in the future.
	
	VI. launchpadlib
			launchpadlib is a python library that allows access to Launchpad. This (will be) used in Helioviewer
			for automated bug & feature-request submission. (Note: python-dev is required if it is not already
			installed. See reference [7] for instructions on how to install launchpadlib on your machine.
			
	VII. JP2 support
	
			Helioviewer currently uses a combination of ExifTool[12] and Kakadu [13] to support on-the-fly jp2 tiling. 
			XML Header information is first read from the JP2 images using Exif and stored into the database. When tiles are
			required, the kakadu tool "kdu_extract" is then used to produce the tiles on the fly.
			
			To install ExifTool on Ubuntu Linux you can use the command: 
			
			sudo apt-get install libimage-exiftool-perl
			
			Kakadu is proprietary software and thus cannot be included with Helioviewer.
			
			
	
	VIII. Prototip 
				
			
Resources:

[1] http://dev.mysql.com/doc/refman/5.0/en/time-zone-support.html
[2] http://helioviewer.org/wiki/index.php?title=Directory_structure_and_tile_naming_convention
[3] http://ant.apache.org/
[4] http://developer.yahoo.com/performance/rules.html
[5] http://www.crockford.com/javascript/jsmin.html
[6] http://mail-archives.apache.org/mod_mbox/ant-user/200807.mbox/browser
[7] https://help.launchpad.net/API/launchpadlib
[8] http://www.nickstakenburg.com/projects/prototip2/
[9] http://sourceforge.net/projects/phpvideotoolkit
[10] http://www.buggedcom.co.uk/discuss/index.php
[11] http://code.google.com/p/svgfig/
[12] http://www.sno.phy.queensu.ca/~phil/exiftool/
[13] http://www.kakadusoftware.com/
